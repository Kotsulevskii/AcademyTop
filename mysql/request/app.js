/*const mysql = require('mysql2');

const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '0000',
  database: 'test'
});

connection.connect((err) => {
  if (err) throw err;
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
});

const createTableQuery = `
  CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    price DECIMAL(10,2),
    category VARCHAR(50),
    stock INT,
    description TEXT,
    supplier_id INT
  )
`;

connection.query('DROP TABLE IF EXISTS products', (err) => {
  if (err) throw err;
  console.log('üóëÔ∏è –¢–∞–±–ª–∏—Ü–∞ `products` —É–¥–∞–ª–µ–Ω–∞');
});

connection.query(createTableQuery, (error) => {
  if (error) throw error;
  console.log('üì¶ –¢–∞–±–ª–∏—Ü–∞ `products` —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
});

const sampleProducts = [
  { name: 'iPhone 13', price: 79999.99, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 10, description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω', supplier_id: 1 },
  { name: 'Samsung Galaxy S22', price: 69999.99, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 15, description: '–ê–Ω–¥—Ä–æ–∏–¥ —Ñ–ª–∞–≥–º–∞–Ω', supplier_id: 2 },
  { name: 'MacBook Pro', price: 149999.99, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 5, description: '–ù–æ—É—Ç–±—É–∫ Apple', supplier_id: 1 },
  { name: '–ö–Ω–∏–≥–∞ "JS –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤"', price: 899.99, category: '–ö–Ω–∏–≥–∏', stock: 20, description: '–û–±—É—á–µ–Ω–∏–µ JavaScript', supplier_id: 3 },
  { name: '–ë–ª–æ–∫–Ω–æ—Ç', price: 199.99, category: '–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è', stock: 100, description: '–î–ª—è –∑–∞–º–µ—Ç–æ–∫', supplier_id: null },
  { name: '–ú—ã—à—å –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è', price: 1499.99, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 0, description: 'USB –º—ã—à—å', supplier_id: 2 },
  { name: '–ß–µ—Ö–æ–ª –¥–ª—è iPhone', price: 599.99, category: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', stock: 50, description: '–°–∏–ª–∏–∫–æ–Ω–æ–≤—ã–π', supplier_id: 3 }
];

sampleProducts.forEach(product => {
  connection.query('INSERT INTO products SET ?', product, (err) => {
    if (err) console.log(err);
  });
});

connection.query(
  'SELECT DISTINCT category FROM products',
  (err, results) => {
    if (err) throw err;
    console.log('üéØ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', results);
  }
);

connection.query(
  "SELECT * FROM products WHERE category IN ('–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–ö–Ω–∏–≥–∏')",
  (err, results) => {
    if (err) throw err;
    console.log('üì±üìö –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –∫–Ω–∏–≥–∏:', results);
  }
);
connection.query(
  "SELECT * FROM products WHERE category NOT IN ('–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–ö–Ω–∏–≥–∏')",
  (err, results) => {
    if (err) throw err;
    console.log('üö´ –ù–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –Ω–µ –∫–Ω–∏–≥–∏:', results);
  }
);
connection.query(
  'SELECT * FROM products WHERE price BETWEEN 500 AND 2000',
  (err, results) => {
    if (err) throw err;
    console.log('üí∞ –¶–µ–Ω–∞ –æ—Ç 500 –¥–æ 2000:', results);
  }
);
connection.query(
  "SELECT * FROM products WHERE name LIKE '%iPhone%'",
  (err, results) => {
    if (err) console.log(err);
    console.log('üì± iPhone:', results);
  }
);
connection.query(
  "SELECT * FROM products WHERE description REGEXP '–Ω–æ—É—Ç–±—É–∫|—Å–º–∞—Ä—Ç—Ñ–æ–Ω'",
  (err, results) => {
    if (err) console.log(err);
    console.log('üîç –ù–æ—É—Ç–±—É–∫ –∏–ª–∏ —Å–º–∞—Ä—Ç—Ñ–æ–Ω:', results);
  }
);
connection.query(
  'SELECT * FROM products WHERE supplier_id IS NULL',
  (err, results) => {
    if (err) console.log(err);
    console.log('‚ö†Ô∏è –ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', results);
  }
);
connection.query(
  'SELECT * FROM products ORDER BY price DESC LIMIT 3',
  (err, results) => {
    if (err) console.log(err);
    console.log('üî• –¢–æ–ø 3 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤:', results);
  }
);
connection.query(
  'SELECT * FROM products WHERE category = "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞" AND price > 1000 ORDER BY price ASC LIMIT 2',
  (err, results) => {
    if (err) console.log(err);
    console.log('üõí –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', results);
  }
);
connection.end((err) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', err.message);
  } else {
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
  }
});*/

const mysql = require('mysql2');

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '0000',
  database: 'test'
});

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
connection.connect((err) => {
  if (err) throw err;
  console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MySQL');
});

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞)
connection.query('DROP TABLE IF EXISTS products', (err) => {
  if (err) throw err;
  console.log('üóëÔ∏è –¢–∞–±–ª–∏—Ü–∞ `products` —É–¥–∞–ª–µ–Ω–∞ (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–∞)');
});

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã products
const createTableQuery = `
  CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL,
    category VARCHAR(50),
    description TEXT,
    supplier_id INT
  )
`;

connection.query(createTableQuery, (error, results) => {
  if (error) throw error;
  console.log('üì¶ –¢–∞–±–ª–∏—Ü–∞ `products` —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
});

// –ú–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
const products = [
  { name: '–ù–∞—É—à–Ω–∏–∫–∏ Bluetooth', price: 1999.99, stock: 50, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', description: '–ë–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ —Å —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º', supplier_id: 1 },
  { name: '–ö–Ω–∏–≥–∞ "JS –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö"', price: 799.00, stock: 20, category: '–ö–Ω–∏–≥–∏', description: '–û–±—É—á–µ–Ω–∏–µ JavaScript —Å –Ω—É–ª—è', supplier_id: 2 },
  { name: '–°–º–∞—Ä—Ç—Ñ–æ–Ω X1', price: 14999.99, stock: 10, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω', supplier_id: 1 },
  { name: '–ß–µ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞', price: 299.00, stock: 100, category: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã', description: '–°–∏–ª–∏–∫–æ–Ω–æ–≤—ã–π —á–µ—Ö–æ–ª', supplier_id: 3 },
  { name: '–ë–ª–æ–∫–Ω–æ—Ç', price: 199.50, stock: 15, category: '–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è', description: '–î–ª—è –∑–∞–º–µ—Ç–æ–∫', supplier_id: null },
  { name: '–ü–ª–∞–Ω—à–µ—Ç Pro', price: 9999.99, stock: 5, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω—à–µ—Ç', supplier_id: 1 },
  { name: 'iPhone 13', price: 79999.99, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 10, description: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω', supplier_id: 1 },
  { name: 'Samsung Galaxy S22', price: 69999.99, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 15, description: '–ê–Ω–¥—Ä–æ–∏–¥ —Ñ–ª–∞–≥–º–∞–Ω', supplier_id: 2 },
  { name: 'MacBook Pro', price: 149999.99, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 5, description: '–ù–æ—É—Ç–±—É–∫ Apple', supplier_id: 1 },
  { name: '–ú—ã—à—å –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–∞—è', price: 1499.99, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', stock: 0, description: 'USB –º—ã—à—å', supplier_id: 2 }
];

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É
products.forEach(product => {
  connection.query(
    'INSERT INTO products SET ?',
    product,
    (error, results) => {
      if (error) throw error;
      console.log(`üÜï –¢–æ–≤–∞—Ä "${product.name}" –¥–æ–±–∞–≤–ª–µ–Ω —Å ID: ${results.insertId}`);
    }
  );
});

// –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

// 1. –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
connection.query('SELECT * FROM products', (error, results) => {
  if (error) throw error;
  console.log('üõí –í—Å–µ —Ç–æ–≤–∞—Ä—ã:', results);
});

// 2. –ü–æ–ª—É—á–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É –¥–µ—à–µ–≤–ª–µ 15000
connection.query(
  'SELECT * FROM products WHERE category = "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞" AND price < 15000',
  (error, results) => {
    if (error) throw error;
    console.log('üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –¥–µ—à–µ–≤–ª–µ 15000:', results);
  }
);

// 3. –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã —Å –º–∞–ª—ã–º –∑–∞–ø–∞—Å–æ–º
connection.query(
  'SELECT * FROM products WHERE stock < 20',
  (error, results) => {
    if (error) throw error;
    console.log('‚ö†Ô∏è –ú–∞–ª–æ –Ω–∞ —Å–∫–ª–∞–¥–µ:', results);
  }
);

// 4. –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
const productId = 1;
const newStock = 25;

connection.query(
  'UPDATE products SET stock = ? WHERE id = ?',
  [newStock, productId],
  (error, results) => {
    if (error) throw error;
    console.log(`üîÑ –û—Å—Ç–∞—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞ ID ${productId} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ ${newStock}`);
  }
);

// 5. –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞
connection.query(
  'DELETE FROM products WHERE stock = 0',
  (error, results) => {
    if (error) throw error;
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞: ${results.affectedRows}`);
  }
);

// 6. –ü–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
connection.query(
  'SELECT DISTINCT category FROM products',
  (err, results) => {
    if (err) throw err;
    console.log('üéØ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', results);
  }
);

// 7. –ü–æ–ª—É—á–∏—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É –∏ –∫–Ω–∏–≥–∏
connection.query(
  "SELECT * FROM products WHERE category IN ('–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–ö–Ω–∏–≥–∏')",
  (err, results) => {
    if (err) throw err;
    console.log('üì±üìö –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –∫–Ω–∏–≥–∏:', results);
  }
);

// 8. –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –Ω–µ –∫–Ω–∏–≥–∏
connection.query(
  "SELECT * FROM products WHERE category NOT IN ('–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '–ö–Ω–∏–≥–∏')",
  (err, results) => {
    if (err) throw err;
    console.log('üö´ –ù–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ –Ω–µ –∫–Ω–∏–≥–∏:', results);
  }
);

// 9. –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ —Ü–µ–Ω–æ–≤–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
connection.query(
  'SELECT * FROM products WHERE price BETWEEN 500 AND 2000',
  (err, results) => {
    if (err) throw err;
    console.log('üí∞ –¶–µ–Ω–∞ –æ—Ç 500 –¥–æ 2000:', results);
  }
);

// 10. –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
connection.query(
  "SELECT * FROM products WHERE name LIKE '%iPhone%'",
  (err, results) => {
    if (err) throw err;
    console.log('üì± iPhone:', results);
  }
);

// 11. –ü–æ–∏—Å–∫ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º
connection.query(
  "SELECT * FROM products WHERE description REGEXP '–Ω–æ—É—Ç–±—É–∫|—Å–º–∞—Ä—Ç—Ñ–æ–Ω'",
  (err, results) => {
    if (err) throw err;
    console.log('üîç –ù–æ—É—Ç–±—É–∫ –∏–ª–∏ —Å–º–∞—Ä—Ç—Ñ–æ–Ω:', results);
  }
);

// 12. –¢–æ–≤–∞—Ä—ã –±–µ–∑ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
connection.query(
  'SELECT * FROM products WHERE supplier_id IS NULL',
  (err, results) => {
    if (err) throw err;
    console.log('‚ö†Ô∏è –ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', results);
  }
);

// 13. –¢–æ–ø 3 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
connection.query(
  'SELECT * FROM products ORDER BY price DESC LIMIT 3',
  (err, results) => {
    if (err) throw err;
    console.log('üî• –¢–æ–ø 3 —Å–∞–º—ã—Ö –¥–æ—Ä–æ–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤:', results);
  }
);

// 14. –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
connection.query(
  'SELECT * FROM products WHERE category = "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞" AND price > 1000 ORDER BY price ASC LIMIT 2',
  (err, results) => {
    if (err) throw err;
    console.log('üõí –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', results);
  }
);

// –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
connection.end((err) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', err.message);
  } else {
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
  }
});5