const mysql = require('mysql2');

const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '0000',
  database: 'test'
});

connection.connect((err) => {
  if (err) throw err;
  console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MySQL');
});

const createTableQuery = `
  CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL,
    category VARCHAR(50)
  )
`;

connection.query(createTableQuery, (error, results) => {
  if (error) throw error;
  console.log('üì¶ –¢–∞–±–ª–∏—Ü–∞ `products` —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
});

const products = [
  { name: '–ù–∞—É—à–Ω–∏–∫–∏ Bluetooth', price: 1999.99, stock: 50, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' },
  { name: '–ö–Ω–∏–≥–∞ "JS –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö"', price: 799.00, stock: 20, category: '–ö–Ω–∏–≥–∏' },
  { name: '–°–º–∞—Ä—Ç—Ñ–æ–Ω X1', price: 14999.99, stock: 10, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' },
  { name: '–ß–µ—Ö–æ–ª –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞', price: 299.00, stock: 100, category: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã' },
  { name: '–ë–ª–æ–∫–Ω–æ—Ç', price: 199.50, stock: 15, category: '–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è' },
  { name: '–ü–ª–∞–Ω—à–µ—Ç Pro', price: 9999.99, stock: 5, category: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' }
];

products.forEach(product => {
  connection.query(
    'INSERT INTO products SET ?',
    product,
    (error, results) => {
      if (error) throw error;
      console.log(`üÜï –¢–æ–≤–∞—Ä "${product.name}" –¥–æ–±–∞–≤–ª–µ–Ω —Å ID: ${results.insertId}`);
    }
  );
});

connection.query('SELECT * FROM products', (error, results) => {
  if (error) throw error;
  console.log('üõí –í—Å–µ —Ç–æ–≤–∞—Ä—ã:', results);
});

connection.query(
  'SELECT * FROM products WHERE category = "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞" AND price < 15000',
  (error, results) => {
    if (error) throw error;
    console.log('üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –¥–µ—à–µ–≤–ª–µ 15000:', results);
  }
);

connection.query(
  'SELECT * FROM products WHERE stock < 20',
  (error, results) => {
    if (error) throw error;
    console.log('‚ö†Ô∏è –ú–∞–ª–æ –Ω–∞ —Å–∫–ª–∞–¥–µ:', results);
  }
);

const productId = 1;
const newStock = 25;

connection.query(
  'UPDATE products SET stock = ? WHERE id = ?',
  [newStock, productId],
  (error, results) => {
    if (error) throw error;
    console.log(`üîÑ –û—Å—Ç–∞—Ç–æ–∫ —Ç–æ–≤–∞—Ä–∞ ID ${productId} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ ${newStock}`);
  }
);

connection.query(
  'DELETE FROM products WHERE stock = 0',
  (error, results) => {
    if (error) throw error;
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞: ${results.affectedRows}`);
  }
);

connection.end((err) => {
  if (err) throw err;
  console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MySQL –∑–∞–∫—Ä—ã—Ç–æ');
});