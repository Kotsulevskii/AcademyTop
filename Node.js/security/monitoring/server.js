const express = require('express');
const fs = require('fs');
const path = require('path');
const morgan = require('morgan');

const app = express();

// –õ–æ–≥–≥–µ—Ä: –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –∫–æ–Ω—Å–æ–ª—å
app.use(morgan('combined'));

// –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
const LOG_FILE = path.join(__dirname, 'suspicious_requests.log');

// –ü—Ä–æ—Å—Ç–æ–π –¥–µ—Ç–µ–∫—Ç–æ—Ä —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
function isSuspicious(req) {
  const suspiciousPatterns = [
    /DROP\s+TABLE/i,
    /<script.*?>.*?<\/script>/i,
    /alert\(/i,
    /\.\.\//i,
    /etc\/passwd/i
  ];

  const valueToCheck = req.url + JSON.stringify(req.query) + JSON.stringify(req.body);
  return suspiciousPatterns.some(pattern => pattern.test(valueToCheck));
}

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  if (isSuspicious(req)) {
    const logEntry = `[${new Date().toISOString()}] ${req.method} ${req.url}\nHeaders: ${JSON.stringify(req.headers)}\nBody: ${JSON.stringify(req.body)}\n\n`;
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
    fs.appendFile(LOG_FILE, logEntry, err => {
      if (err) console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞:', err);
    });

    console.warn('‚ö†Ô∏è –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:\n', logEntry);
    return res.status(403).send('–ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å.');
  }

  next();
});

// –ü—Ä–∏–º–µ—Ä –º–∞—Ä—à—Ä—É—Ç–∞
app.get('/search', (req, res) => {
  res.json({ query: req.query.q });
});

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`üîç –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º –Ω–∞ http://localhost:${PORT}`);
});


//curl "http://localhost:3000/search?q=<script>alert(1)</script>"

//curl "http://localhost:3000/search?q=admin' OR '1'='1"